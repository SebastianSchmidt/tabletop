{"version":3,"sources":["field/GridItem.module.css","forms/Forms.module.css","app/App.module.css","token/DraggableToken.module.css","field/Field.module.css","panel/PanelCategory.module.css","dnd/CustomDragLayer.module.css","field/Grid.module.css","panel/PanelContainer.module.css","panel/Panel.module.css","token/Token.jsx","token/DraggableToken.jsx","token/DraggableTokenPreview.jsx","dnd/CustomDragLayer.jsx","dnd/DndProvider.jsx","field/state.js","field/GridItem.jsx","field/Grid.jsx","field/GridToken.jsx","field/Field.jsx","forms/NumberField.jsx","forms/use-input.js","panel/Panel.jsx","panel/PanelCategory.jsx","panel/FieldPanel.jsx","panel/TokenPanel.jsx","panel/PanelContainer.jsx","panel/state.js","app/App.js","serviceWorker.js","store.js","index.js","token/Token.module.css"],"names":["module","exports","Direction","Object","freeze","north","south","west","east","BLACK_TEXT","WHITE_TEXT","Token","id","size","color","symbol","direction","onTokenClick","onDirectionClick","selected","circleRef","containerClassName","circleClassName","onCircleClick","useCallback","event","stopPropagation","useCircleClick","onNorthClick","useDirectionClick","onSouthClick","onWestClick","onEastClick","colors","blackText","chroma","contrast","backgroundColor","borderColor","darken","saturate","hex","textColor","generateColors","containerStyle","width","height","generateContainerStyle","circleStyle","generateCircleStyle","northStyle","borderWidth","generateBorderWidth","top","left","generatePosition","borderLeftWidth","borderRightWidth","borderBottomWidth","borderBottomColor","generateNorthStyle","southStyle","bottom","borderTopWidth","borderTopColor","generateSouthStyle","westStyle","borderRightColor","generateWestStyle","eastStyle","right","borderLeftColor","generateEastStyle","containerClasses","classNames","styles","container","circleClasses","circle","className","style","ref","onClick","directionNode","currentDirection","current","TOKEN_DND_TYPE","DraggableToken","props","useDrag","type","item","collect","monitor","isDragging","drag","preview","useEffect","getEmptyImage","captureDraggingState","dragging","DraggableTokenPreview","offset","tokenProps","diff","x","y","transform","generateStyle","CustomDragLayer","useDragLayer","getItem","itemType","getItemType","currentOffset","getSourceClientOffset","renderPreview","layer","DndProvider","children","backend","HTML5Backend","NAME","normalizeDimension","value","Math","max","min","state","createSlice","name","initialState","columns","rows","zoom","cells","nextTokenId","tokenIds","tokens","selectedTokenId","reducers","setDimensions","action","payload","columnsDiff","increase","columnsStart","columnsEnd","growColumns","decrease","tokenId","filter","splice","shrinkColumns","abs","rowsDiff","rowsStart","rowsEnd","growRows","shrinkRows","createToken","token","push","moveToken","selectToken","unselectToken","toggleDirection","setTokenSymbol","getColumns","getRows","getZoom","getTokenIds","getSelectedTokenId","actions","GridItem","dispatch","useDispatch","empty","useSelector","isCellEmpty","useDrop","accept","canDrop","drop","handleMovenToken","isOver","useDroppable","cell","firstRow","lastColumn","droppable","cellSize","lineHeight","Grid","generateGridStyle","generateCells","grid","GridToken","getTokenById","isTokenSelected","position","Field","generateCellSize","gridTokens","map","generateGridTokens","field","gridWrapper","NumberField","label","onChange","initialValue","listener","useState","setValue","target","useInput","string","parseInt","isNaN","bind","element","input","Panel","title","PanelCategory","FieldPanel","Dimensions","columnsChanged","rowsChanged","TokenPanel","PanelContainer","App","tokenPanel","Boolean","window","location","hostname","match","store","configureStore","reducer","panel","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5e46f7a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"GridItem_cell__hsSTq\",\"firstRow\":\"GridItem_firstRow__8BhAg\",\"lastColumn\":\"GridItem_lastColumn__320FC\",\"droppable\":\"GridItem_droppable__yTq2v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"Forms_element__3Ktu0\",\"label\":\"Forms_label__9aoLd\",\"input\":\"Forms_input__34n01\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__7_OSo\",\"field\":\"App_field__1Za-d\",\"tokenPanel\":\"App_tokenPanel__1Y1io\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"circle\":\"DraggableToken_circle__2e89C\",\"dragging\":\"DraggableToken_dragging__3643i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"Field_field__1PltA\",\"gridWrapper\":\"Field_gridWrapper__oluTN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PanelCategory_container__2ywKt\",\"title\":\"PanelCategory_title__2RLOE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layer\":\"CustomDragLayer_layer__3Oi1J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__5dSy0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PanelContainer_container__12MNC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Panel_title__2jCxg\"};","import { useCallback } from 'react'\nimport styles from './Token.module.css'\nimport chroma from 'chroma-js'\nimport classNames from 'classnames'\n\nexport const Direction = Object.freeze({\n    north: 'north',\n    south: 'south',\n    west: 'west',\n    east: 'east'\n})\n\nconst BLACK_TEXT = '#000000'\nconst WHITE_TEXT = '#FFFFFF'\n\nexport function Token({\n    id,\n    size,\n    color,\n    symbol,\n    direction,\n    onTokenClick,\n    onDirectionClick,\n    selected,\n    circleRef,\n    containerClassName,\n    circleClassName\n}) {\n    // Logic\n\n    const onCircleClick = useCircleClick(id, onTokenClick)\n    const onNorthClick = useDirectionClick(Direction.north, id, onDirectionClick)\n    const onSouthClick = useDirectionClick(Direction.south, id, onDirectionClick)\n    const onWestClick = useDirectionClick(Direction.west, id, onDirectionClick)\n    const onEastClick = useDirectionClick(Direction.east, id, onDirectionClick)\n\n    // Styling\n\n    const colors = generateColors(color)\n\n    const containerStyle = generateContainerStyle(size)\n    const circleStyle = generateCircleStyle(colors)\n    const northStyle = generateNorthStyle(size, colors)\n    const southStyle = generateSouthStyle(size, colors)\n    const westStyle = generateWestStyle(size, colors)\n    const eastStyle = generateEastStyle(size, colors)\n\n    const containerClasses = classNames(\n        styles.container,\n        { [styles.selected]: selected },\n        containerClassName\n    )\n\n    const circleClasses = classNames(\n        styles.circle,\n        circleClassName\n    )\n\n    // JSX\n\n    return (\n        <div\n            className={containerClasses}\n            style={containerStyle}\n        >\n            <div\n                ref={circleRef}\n                onClick={onCircleClick}\n                className={circleClasses}\n                style={circleStyle}\n            >\n                <span>{symbol}</span>\n            </div>\n            {directionNode(Direction.north, onNorthClick, northStyle, styles.north, styles, direction)}\n            {directionNode(Direction.south, onSouthClick, southStyle, styles.south, styles, direction)}\n            {directionNode(Direction.west, onWestClick, westStyle, styles.west, styles, direction)}\n            {directionNode(Direction.east, onEastClick, eastStyle, styles.east, styles, direction)}\n        </div>\n    )\n}\n\nfunction directionNode(direction, onClick, style, className, styles, currentDirection) {\n    const current = direction === currentDirection\n    return (\n        <div\n            onClick={onClick}\n            className={classNames(className, styles.direction, { [styles.current]: current })}\n            style={style}\n        />\n    )\n}\n\n// Logic\n\nfunction useCircleClick(id, onTokenClick) {\n    return useCallback((event) => {\n        if (onTokenClick) {\n            event.stopPropagation()\n            onTokenClick(id)\n        }\n    }, [id, onTokenClick])\n}\n\nfunction useDirectionClick(direction, id, onDirectionClick) {\n    return useCallback((event) => {\n        if (onDirectionClick) {\n            event.stopPropagation()\n            onDirectionClick(id, direction)\n        }\n    }, [direction, id, onDirectionClick])\n}\n\n// Styling\n\nfunction generateColors(color) {\n    const blackText = chroma.contrast(BLACK_TEXT, color) >= chroma.contrast(WHITE_TEXT, color)\n    return {\n        backgroundColor: color,\n        borderColor: chroma(color).darken(2).saturate(2).hex(),\n        textColor: blackText ? BLACK_TEXT : WHITE_TEXT\n    }\n}\n\nfunction generateContainerStyle(size) {\n    return {\n        width: size + 'px',\n        height: size + 'px'\n    }\n}\n\nfunction generateCircleStyle(colors) {\n    return {\n        backgroundColor: colors.backgroundColor,\n        borderColor: colors.borderColor,\n        color: colors.textColor\n    }\n}\n\nfunction generateNorthStyle(size, colors) {\n    const borderWidth = generateBorderWidth(size)\n    return {\n        top: 0,\n        left: generatePosition(size),\n        borderLeftWidth: borderWidth,\n        borderRightWidth: borderWidth,\n        borderBottomWidth: borderWidth,\n        borderBottomColor: colors.borderColor\n    }\n}\n\nfunction generateSouthStyle(size, colors) {\n    const borderWidth = generateBorderWidth(size)\n    return {\n        bottom: 0,\n        left: generatePosition(size),\n        borderLeftWidth: borderWidth,\n        borderRightWidth: borderWidth,\n        borderTopWidth: borderWidth,\n        borderTopColor: colors.borderColor\n    }\n}\n\nfunction generateWestStyle(size, colors) {\n    const borderWidth = generateBorderWidth(size)\n    return {\n        top: generatePosition(size),\n        left: 0,\n        borderTopWidth: borderWidth,\n        borderBottomWidth: borderWidth,\n        borderRightWidth: borderWidth,\n        borderRightColor: colors.borderColor\n    }\n}\n\nfunction generateEastStyle(size, colors) {\n    const borderWidth = generateBorderWidth(size)\n    return {\n        top: generatePosition(size),\n        right: 0,\n        borderTopWidth: borderWidth,\n        borderBottomWidth: borderWidth,\n        borderLeftWidth: borderWidth,\n        borderLeftColor: colors.borderColor\n    }\n}\n\nfunction generateBorderWidth(size) {\n    return ((size / 10) * 3) + 'px'\n}\n\nfunction generatePosition(size) {\n    return (size / 5) + 'px'\n}\n","import { useEffect } from 'react'\nimport { useDrag } from 'react-dnd'\nimport { getEmptyImage } from 'react-dnd-html5-backend'\nimport classNames from 'classnames'\nimport { Token } from './Token'\nimport styles from './DraggableToken.module.css'\n\nexport const TOKEN_DND_TYPE = 'Token'\n\nexport function DraggableToken(props) {\n    const {\n        id,\n        size,\n        color,\n        symbol,\n        direction\n    } = props\n\n    const [{ isDragging }, drag, preview] = useDrag(() => ({\n        type: TOKEN_DND_TYPE,\n        // TODO Nur Token-ID übertragen (global Token-State):\n        item: {\n            id,\n            size,\n            color,\n            symbol,\n            direction\n        },\n        collect: (monitor) => ({\n            isDragging: !!monitor.isDragging()\n        })\n    }), [id, size, color, symbol, direction])\n\n    useEffect(() => {\n        preview(getEmptyImage(), { captureDraggingState: true })\n    })\n\n    const containerClassName = classNames({\n        [styles.dragging]: isDragging\n    })\n\n    return (\n        <Token\n            {...props}\n            circleRef={drag}\n            containerClassName={containerClassName}\n            circleClassName={styles.circle}\n        />\n    )\n}\n","import { Token } from './Token'\n\nexport function DraggableTokenPreview(props) {\n    const { offset, ...tokenProps } = props\n    const style = generateStyle(props)\n\n    return (\n        <div style={style}>\n            <Token {...tokenProps} />\n        </div>\n    )\n}\n\nfunction generateStyle({ offset, size }) {\n    const diff = (size / 20) * 3\n    const x = offset.x - diff\n    const y = offset.y - diff\n    return { transform: `translate(${x}px, ${y}px)` }\n}\n","import { useDragLayer } from 'react-dnd'\nimport { TOKEN_DND_TYPE, DraggableTokenPreview } from '../token'\nimport styles from './CustomDragLayer.module.css'\n\nexport function CustomDragLayer() {\n    const {\n        item,\n        itemType,\n        currentOffset,\n        isDragging\n    } = useDragLayer(monitor => ({\n        item: monitor.getItem(),\n        itemType: monitor.getItemType(),\n        currentOffset: monitor.getSourceClientOffset(),\n        isDragging: monitor.isDragging()\n    }))\n\n    if (!isDragging || !currentOffset) {\n        return null\n    }\n    const preview = renderPreview(item, itemType, currentOffset)\n\n    if (!preview) {\n        return null\n    }\n\n    return (\n        <div className={styles.layer}>\n            {preview}\n        </div>\n    )\n}\n\nfunction renderPreview(item, type, offset) {\n    switch (type) {\n        case TOKEN_DND_TYPE:\n            return <DraggableTokenPreview offset={offset} {...item} />\n        default:\n            return null\n    }\n}\n","import { DndProvider as Provider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { CustomDragLayer } from './CustomDragLayer'\n\nexport function DndProvider({ children }) {\n    return (\n        <Provider backend={HTML5Backend}>\n            <CustomDragLayer />\n            { children }\n        </Provider>\n    )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst NAME = 'field'\n\nexport const MIN_DIMENSIONS = 1\nexport const MAX_DIMENSIONS = 100\n\nfunction normalizeDimension(value) {\n    return Math.max(MIN_DIMENSIONS, Math.min(MAX_DIMENSIONS, value))\n}\n\nexport const state = createSlice({\n    name: NAME,\n    initialState: {\n        columns: 1,\n        rows: 1,\n        zoom: 1,\n        cells: [ [ null ] ],\n        nextTokenId: 0,\n        tokenIds: [],\n        tokens: {},\n        selectedTokenId: null\n    },\n    reducers: {\n\n        // Payload: columns, rows\n        setDimensions(state, action) {\n            const columns = normalizeDimension(action.payload.columns)\n            const rows = normalizeDimension(action.payload.rows)\n\n            // Columns\n\n            const columnsDiff = columns - state.columns\n\n            if (columnsDiff > 0) {\n                growColumns(state, columnsDiff)\n            } else if (columnsDiff < 0) {\n                shrinkColumns(state, Math.abs(columnsDiff))\n            }\n\n            state.columns = columns\n\n            // Rows\n\n            const rowsDiff = rows - state.rows\n\n            if (rowsDiff > 0) {\n                growRows(state, rowsDiff)\n            } else if (rowsDiff < 0) {\n                shrinkRows(state, Math.abs(rowsDiff))\n            }\n\n            state.rows = rows\n        },\n\n        // Payload: color, symbol, direction, x, y\n        createToken(state, action) {\n            const token = {\n                id: (state.nextTokenId++) + '',\n                ...action.payload\n            }\n\n            state.tokenIds.push(token.id)\n            state.tokens[token.id] = token\n            state.cells[token.x][token.y] = token.id\n        },\n\n        // Payload: id, x, y\n        moveToken(state, action) {\n            const { id, x, y } = action.payload\n\n            const token = state.tokens[id]\n\n            state.cells[token.x][token.y] = null\n            state.cells[x][y] = token.id\n\n            token.x = x\n            token.y = y\n        },\n\n        // Payload: id\n        selectToken(state, action) {\n            const { id } = action.payload\n            state.selectedTokenId = id\n        },\n\n        unselectToken(state) {\n            state.selectedTokenId = null\n        },\n\n        // Payload: id, direction\n        toggleDirection(state, action) {\n            const { id, direction } = action.payload\n\n            const token = state.tokens[id]\n\n            if (token.direction !== direction) {\n                token.direction = direction\n            } else {\n                token.direction = null\n            }\n        },\n\n        // Payload: id, symbol\n        setTokenSymbol(state, action) {\n            const { id, symbol } = action.payload\n            const token = state.tokens[id]\n            token.symbol = symbol\n        }\n\n    }\n})\n\nfunction growColumns(state, increase) {\n    const columnsStart = state.columns\n    const columnsEnd = state.columns + increase\n\n    for (let x = columnsStart; x < columnsEnd; x++) {\n        state.cells[x] = []\n\n        for (let y = 0; y < state.rows; y++) {\n            state.cells[x][y] = null\n        }\n    }\n}\n\nfunction growRows(state, increase) {\n    const rowsStart = state.rows\n    const rowsEnd = state.rows + increase\n\n    for (let x = 0; x < state.columns; x++) {\n        for (let y = rowsStart; y < rowsEnd; y++) {\n            state.cells[x][y] = null\n        }\n    }\n}\n\nfunction shrinkColumns(state, decrease) {\n    const columnsStart = state.columns - decrease\n    const columnsEnd = state.columns\n\n    for (let x = columnsStart; x < columnsEnd; x++) {\n        for (let y = 0; y < state.rows; y++) {\n            const tokenId = state.cells[x][y]\n\n            if (tokenId) {\n                state.tokenIds = state.tokenIds.filter(id => id !== tokenId)\n                delete state.tokens[tokenId]\n            }\n        }\n    }\n\n    state.cells.splice(columnsStart, decrease)\n}\n\nfunction shrinkRows(state, decrease) {\n    const rowsStart = state.rows - decrease\n    const rowsEnd = state.rows\n\n    for (let x = 0; x < state.columns; x++) {\n        for (let y = rowsStart; y < rowsEnd; y++) {\n            const tokenId = state.cells[x][y]\n\n            if (tokenId) {\n                state.tokenIds = state.tokenIds.filter(id => id !== tokenId)\n                delete state.tokens[tokenId]\n            }\n        }\n\n        state.cells[x].splice(rowsStart, decrease)\n    }\n}\n\nexport const getColumns = (state) => state[NAME].columns\nexport const getRows = (state) => state[NAME].rows\nexport const getZoom = (state) => state[NAME].zoom\nexport const getTokenIds = (state) => state[NAME].tokenIds\nexport const getTokenById = (state, id) => state[NAME].tokens[id]\nexport const isCellEmpty = (state, x, y) => state[NAME].cells[x][y] === null\n\nexport const isTokenSelected = (state, tokenId) => state[NAME].selectedTokenId === tokenId\nexport const getSelectedTokenId = (state) => state[NAME].selectedTokenId\nexport const getSelectedToken = (state) => {\n    const id = state[NAME].selectedTokenId\n    return id !== null ? state[NAME].tokens[id] : null\n}\n\nexport const {\n    setDimensions,\n    createToken,\n    moveToken,\n    selectToken,\n    unselectToken,\n    toggleDirection,\n    setTokenSymbol\n} = state.actions\n","import { useDrop } from 'react-dnd'\nimport classNames from 'classnames'\nimport styles from './GridItem.module.css'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { TOKEN_DND_TYPE } from '../token'\nimport { isCellEmpty, moveToken } from './state'\n\nexport function GridItem({\n    x,\n    y,\n    columns,\n    size\n}) {\n    const [{ isOver, canDrop }, drop] = useDroppable(x, y)\n\n    const className = classNames(\n        styles.cell,\n        {\n            [styles.firstRow]: y === 0,\n            [styles.lastColumn]: x === columns - 1,\n            [styles.droppable]: isOver && canDrop\n        }\n    )\n\n    const style = generateStyle(size)\n\n    return (\n        <div\n            ref={drop}\n            className={className}\n            style={style}\n        />\n    )\n}\n\nfunction useDroppable(x, y) {\n    const dispatch = useDispatch()\n\n    const empty = useSelector((state) => isCellEmpty(state, x, y))\n\n    return useDrop(() => ({\n        accept: TOKEN_DND_TYPE,\n        canDrop: () => empty,\n        drop: (item) => handleMovenToken(item, x, y, dispatch),\n        collect: (monitor) => ({\n            isOver: !!monitor.isOver(),\n            canDrop: !!monitor.canDrop()\n        })\n    }), [x, y, empty, dispatch])\n}\n\nfunction handleMovenToken(item, x, y, dispatch) {\n    const { id } = item\n\n    dispatch(moveToken({\n        id,\n        x,\n        y\n    }))\n}\n\nfunction generateStyle(cellSize) {\n    const size = cellSize + 'px'\n    return {\n        width: size,\n        height: size,\n        lineHeight: size\n    }\n}\n","import styles from './Grid.module.css'\nimport { GridItem } from './GridItem'\n\nexport function Grid({ columns, rows, cellSize, children }) {\n    const style = generateGridStyle(columns, rows, cellSize)\n    const cells = generateCells(columns, rows, cellSize)\n\n    return (\n        <div className={styles.grid} style={style}>\n            {cells}\n            {children}\n        </div>\n    )\n}\n\nfunction generateGridStyle(columns, rows, cellSize) {\n    return {\n        width: (columns * cellSize) + 'px',\n        height: (rows * cellSize) + 'px'\n    }\n}\n\nfunction generateCells(columns, rows, cellSize) {\n    const cells = []\n\n    for (let y = 0; y < rows; y++) {\n\n        for (let x = 0; x < columns; x++) {\n\n            cells.push(\n                <GridItem\n                    key={x + ';' + y}\n                    x={x}\n                    y={y}\n                    columns={columns}\n                    size={cellSize}\n                />\n            )\n\n        }\n\n    }\n\n    return cells\n}\n","import { useCallback } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DraggableToken } from '../token'\nimport { getTokenById, selectToken, unselectToken, isTokenSelected, toggleDirection } from './state'\n\nexport function GridToken(props) {\n    const { id, size } = props\n\n    const { color, symbol, direction, x, y } = useSelector((state) => getTokenById(state, id))\n    const selected = useSelector((state) => isTokenSelected(state, id))\n\n    const dispatch = useDispatch()\n\n    const onTokenClick = useCallback((id) => {\n        if (!selected) {\n            dispatch(selectToken({ id }))\n        } else {\n            dispatch(unselectToken())\n        }\n    }, [dispatch, selected])\n\n    const onDirectionClick = useCallback((id, direction) => {\n        if (selected) {\n            dispatch(toggleDirection({ id, direction }))\n        } else {\n            dispatch(selectToken({ id }))\n        }\n    }, [dispatch, selected])\n\n    const containerStyle = generateContainerStyle(x, y, size)\n\n    return (\n        <div style={containerStyle}>\n            <DraggableToken\n                id={id}\n                size={size}\n                color={color}\n                symbol={symbol}\n                direction={direction}\n                onTokenClick={onTokenClick}\n                onDirectionClick={onDirectionClick}\n                selected={selected}\n            />\n        </div>\n    )\n}\n\nfunction generateContainerStyle(x, y, size) {\n    const left = (x * size) + 'px'\n    const top = (y * size) + 'px'\n\n    const width = size + 'px'\n    const height = size + 'px'\n\n    return {\n        position: 'absolute',\n        left,\n        top,\n        width,\n        height\n    }\n}\n","import { useSelector, useDispatch } from 'react-redux'\nimport { Grid } from './Grid'\nimport { GridToken } from './GridToken'\nimport { getColumns, getRows, getZoom, getTokenIds, unselectToken } from './state'\nimport styles from './Field.module.css'\n\nconst BASE_CELL_SIZE = 100\n\nexport function Field() {\n    const columns = useSelector(getColumns)\n    const rows = useSelector(getRows)\n    const zoom = useSelector(getZoom)\n    const tokenIds = useSelector(getTokenIds)\n\n    const cellSize = generateCellSize(zoom)\n    const gridTokens = generateGridTokens(tokenIds, cellSize)\n\n    const dispatch = useDispatch()\n    const onUnselectToken = () => dispatch(unselectToken())\n\n    return (\n        <div className={styles.field}>\n            <div\n                className={styles.gridWrapper}\n                onClick={onUnselectToken}\n            >\n                <Grid\n                    columns={columns}\n                    rows={rows}\n                    cellSize={cellSize}\n                >\n                    {gridTokens}\n                </Grid>\n            </div>\n        </div>\n    )\n}\n\nfunction generateCellSize(zoom) {\n    return BASE_CELL_SIZE * zoom\n}\n\nfunction generateGridTokens(tokenIds, cellSize) {\n    return tokenIds.map(tokenId =>\n        <GridToken\n            key={tokenId}\n            id={tokenId}\n            size={cellSize}\n        />\n    )\n}\n","import { useCallback } from 'react'\nimport { useInput } from './use-input'\nimport styles from './Forms.module.css'\n\nexport function NumberField({\n    label,\n    min,\n    max,\n    value,\n    onChange\n}) {\n    const changeHandler = useCallback((string) => {\n        const value = parseInt(string)\n\n        if (!isNaN(value) && min <= value && value <= max) {\n            onChange(value)\n        }\n    }, [min, max, onChange])\n\n    const [bind] = useInput(value, changeHandler)\n\n    return (\n        <div className={styles.element}>\n            <label className={styles.label}>{label}</label>\n            <input\n                className={styles.input}\n                type=\"number\"\n                min={min}\n                max={max}\n                {...bind}\n            />\n        </div>\n    )\n}\n","import { useState, useEffect } from 'react'\n\nexport const useInput = (initialValue, listener = null) => {\n    const [value, setValue] = useState(initialValue)\n\n    useEffect(() => setValue(initialValue), [initialValue])\n\n    const bind = {\n        value,\n        onChange: (event) => {\n            setValue(event.target.value)\n            if (listener) {\n                listener(event.target.value)\n            }\n        }\n    }\n\n    return [\n        bind,\n        value,\n        setValue\n    ]\n}\n","import styles from './Panel.module.css'\n\nexport function Panel({ title, children }) {\n    return (\n        <div>\n            <h1 className={styles.title}>{title}</h1>\n            {children}\n        </div>\n    )\n}\n","import styles from './PanelCategory.module.css'\n\nexport function PanelCategory({ title, children }) {\n    return (\n        <div className={styles.container}>\n            {title ? <h2 className={styles.title}>{title}</h2> : null}\n            {children}\n        </div>\n    )\n}\n","import { useCallback } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { NumberField } from '../forms'\nimport { getColumns, getRows, setDimensions, MIN_DIMENSIONS, MAX_DIMENSIONS } from '../field'\nimport { Panel } from './Panel'\nimport { PanelCategory } from './PanelCategory'\n\nexport function FieldPanel() {\n    return (\n        <Panel title=\"Field\">\n            <Dimensions />\n        </Panel>\n    )\n}\n\n// TODO Besseres Handling, wenn mehrstellige Zahlen eingegeben wird\n//      (Bsp. 10: schrumpft erst auf 1, wächst dann auf 10).\nfunction Dimensions() {\n    const dispatch = useDispatch()\n    const columns = useSelector(getColumns)\n    const rows = useSelector(getRows)\n\n    const columnsChanged = useCallback((columns) => {\n        dispatch(setDimensions({\n            columns,\n            rows\n        }))\n    }, [dispatch, rows])\n\n    const rowsChanged = useCallback((rows) => {\n        dispatch(setDimensions({\n            columns,\n            rows\n        }))\n    }, [dispatch, columns])\n\n    return (\n        <PanelCategory title=\"Dimensions\">\n            <NumberField\n                label=\"Columns\"\n                min={MIN_DIMENSIONS}\n                max={MAX_DIMENSIONS}\n                value={columns}\n                onChange={columnsChanged}\n            />\n            <NumberField\n                label=\"Rows\"\n                min={MIN_DIMENSIONS}\n                max={MAX_DIMENSIONS}\n                value={rows}\n                onChange={rowsChanged}\n            />\n        </PanelCategory>\n    )\n}\n","import { Panel } from './Panel'\nimport { PanelCategory } from './PanelCategory'\n\nexport function TokenPanel({ id }) {\n    return (\n        <Panel title=\"Token\">\n            <PanelCategory>\n                Debug: {id}\n            </PanelCategory>\n        </Panel>\n    )\n}\n","import { useSelector } from 'react-redux'\nimport { getSelectedTokenId } from '../field'\nimport styles from './PanelContainer.module.css'\nimport { FieldPanel } from './FieldPanel'\nimport { TokenPanel } from './TokenPanel'\n\nexport function PanelContainer() {\n    const selectedTokenId = useSelector(getSelectedTokenId)\n\n    return (\n        <div className={styles.container}>\n            {selectedTokenId\n                ? <TokenPanel id={selectedTokenId} />\n                : <FieldPanel />\n            }\n        </div>\n    )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst NAME = 'panel'\n\nexport const state = createSlice({\n    name: NAME,\n    initialState: {\n    },\n    reducers: {\n\n    }\n})\n","import { Field } from '../field'\nimport { PanelContainer } from '../panel'\nimport styles from './App.module.css'\n\nfunction App() {\n    return (\n        <div className={styles.container}>\n            <Field className={styles.field} />\n            <PanelContainer className={styles.tokenPanel} />\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { state as field } from './field'\nimport { state as panel } from './panel'\n\nexport const store = configureStore({\n    reducer: {\n        [field.name]: field.reducer,\n        [panel.name]: panel.reducer\n    }\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { DndProvider } from './dnd'\nimport App from './app/App'\nimport * as serviceWorker from './serviceWorker'\nimport './base.css'\n\nimport { store } from './store'\nimport { Direction } from './token'\nimport { setDimensions, createToken, moveToken } from './field'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <DndProvider>\n                <App />\n            </DndProvider>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n\nstore.dispatch(setDimensions({\n    columns: 5,\n    rows: 5\n}))\n\nstore.dispatch(createToken({\n    color: '#D5E8D4',\n    symbol: 'T',\n    direction: Direction.west,\n    x: 4,\n    y: 4\n}))\n\nstore.dispatch(createToken({\n    color: '#D5E8D4',\n    symbol: 'E',\n    direction: Direction.south,\n    x: 1,\n    y: 0\n}))\n\nstore.dispatch(createToken({\n    color: '#F8CECC',\n    symbol: 'M',\n    direction: Direction.south,\n    x: 1,\n    y: 1\n}))\n\nstore.dispatch(createToken({\n    color: '#F8CECC',\n    symbol: 'M',\n    direction: Direction.south,\n    x: 2,\n    y: 2\n}))\n\nstore.dispatch(createToken({\n    color: '#D5E8D4',\n    symbol: 'Y',\n    direction: Direction.west,\n    x: 3,\n    y: 2\n}))\n\nstore.dispatch(createToken({\n    color: '#D5E8D4',\n    symbol: 'K',\n    direction: Direction.north,\n    x: 1,\n    y: 3\n}))\n\nstore.dispatch(createToken({\n    color: '#647687',\n    symbol: '',\n    direction: null,\n    x: 4,\n    y: 0\n}))\n\nstore.dispatch(createToken({\n    color: '#647687',\n    symbol: '',\n    direction: null,\n    x: 3,\n    y: 1\n}))\n\nstore.dispatch(createToken({\n    color: '#647687',\n    symbol: '',\n    direction: null,\n    x: 0,\n    y: 2\n}))\n\nstore.dispatch(createToken({\n    color: '#647687',\n    symbol: '',\n    direction: null,\n    x: 1,\n    y: 4\n}))\n\nstore.dispatch(moveToken({\n    id: '0',\n    x: 3,\n    y: 4\n}))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Token_container__C3-vl\",\"circle\":\"Token_circle__36Ifi\",\"direction\":\"Token_direction__2emyN\",\"selected\":\"Token_selected__1GyAX\",\"current\":\"Token_current__P_JN5\",\"north\":\"Token_north__2V4ME\",\"south\":\"Token_south__2HjCE\",\"west\":\"Token_west__2iXXe\",\"east\":\"Token_east__Eu9f2\"};"],"sourceRoot":""}