{"version":3,"sources":["field/Field.module.css","token/Token.module.css","field/Grid.jsx","token/Token.jsx","field/state.js","field/GridToken.jsx","field/Field.jsx","App.js","serviceWorker.js","store.js","index.js","field/Grid.module.css"],"names":["module","exports","Grid","columns","rows","cellSize","children","style","width","height","generateGridStyle","cells","size","lineHeight","generateCellStyle","y","x","classNames","styles","cell","firstRow","lastColumn","push","className","generateCells","grid","Direction","Object","freeze","north","Symbol","south","west","east","Token","id","color","symbol","direction","onTokenClick","onDirectionClick","selected","colors","backgroundColor","borderColor","chroma","darken","saturate","hex","generateColors","containerStyle","generateContainerStyle","circleStyle","generateCircleStyle","northStyle","borderWidth","generateBorderWidth","top","left","generatePosition","borderLeftWidth","borderRightWidth","borderBottomWidth","borderBottomColor","generateNorthStyle","southStyle","bottom","borderTopWidth","borderTopColor","generateSouthStyle","westStyle","borderRightColor","generateWestStyle","eastStyle","right","borderLeftColor","generateEastStyle","onCircleClick","useCallback","event","stopPropagation","onNorthClick","useDirectionClick","onSouthClick","onWestClick","onEastClick","container","onClick","circle","directionNode","currentDirection","current","NAME","state","createSlice","name","initialState","zoom","nextTokenId","tokens","selectedTokenId","reducers","setDimensions","action","payload","createToken","token","moveToken","selectToken","unselectToken","toggleDirection","getColumns","getRows","getZoom","getTokens","values","actions","GridToken","props","dispatch","useDispatch","selectedCallback","tokenId","isTokenSelected","useSelector","tokenProps","position","Field","generateCellSize","gridTokens","map","generateGridTokens","field","gridWrapper","App","Boolean","window","location","hostname","match","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.30e4cd72.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"Field_field__1PltA\",\"gridWrapper\":\"Field_gridWrapper__oluTN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Token_container__C3-vl\",\"circle\":\"Token_circle__36Ifi\",\"direction\":\"Token_direction__2emyN\",\"selected\":\"Token_selected__1GyAX\",\"current\":\"Token_current__P_JN5\",\"north\":\"Token_north__2V4ME\",\"south\":\"Token_south__2HjCE\",\"west\":\"Token_west__2iXXe\",\"east\":\"Token_east__Eu9f2\"};","import styles from './Grid.module.css'\n\nexport function Grid({ columns, rows, cellSize, children }) {\n    const style = generateGridStyle(columns, rows, cellSize)\n    const cells = generateCells(columns, rows, cellSize)\n\n    return (\n        <div className={styles.grid} style={style}>\n            {cells}\n            {children}\n        </div>\n    )\n}\n\nfunction generateGridStyle(columns, rows, cellSize) {\n    return {\n        width: (columns * cellSize) + 'px',\n        height: (rows * cellSize) + 'px'\n    }\n}\n\nfunction generateCells(columns, rows, cellSize) {\n    const style = generateCellStyle(cellSize)\n\n    const cells = []\n\n    for (let y = 0; y < rows; y++) {\n\n        for (let x = 0; x < columns; x++) {\n\n            const classNames = styles.cell\n                + (y === 0 ? ' ' + styles.firstRow : '')\n                + (x === columns - 1 ? ' ' + styles.lastColumn : '')\n\n            cells.push(\n                <div\n                    key={x + ';' + y}\n                    className={classNames}\n                    style={style}\n                />\n            )\n\n        }\n\n    }\n\n    return cells\n}\n\nfunction generateCellStyle(cellSize) {\n    const size = cellSize + 'px'\n    return {\n        width: size,\n        height: size,\n        lineHeight: size\n    }\n}\n","import { useCallback } from 'react'\nimport styles from './Token.module.css'\nimport chroma from 'chroma-js'\nimport classNames from 'classnames'\n\nexport const Direction = Object.freeze({\n    north: Symbol('north'),\n    south: Symbol('south'),\n    west: Symbol('west'),\n    east: Symbol('east')\n})\n\nexport function Token({\n    id,\n    size,\n    color,\n    symbol,\n    direction,\n    onTokenClick,\n    onDirectionClick,\n    selected\n}) {\n    const colors = generateColors(color)\n\n    const containerStyle = generateContainerStyle(size)\n    const circleStyle = generateCircleStyle(colors)\n    const northStyle = generateNorthStyle(size, colors)\n    const southStyle = generateSouthStyle(size, colors)\n    const westStyle = generateWestStyle(size, colors)\n    const eastStyle = generateEastStyle(size, colors)\n\n    const onCircleClick = useCallback((event) => {\n        if (onTokenClick) {\n            event.stopPropagation()\n            onTokenClick(id)\n        }\n    }, [id, onTokenClick])\n\n    const onNorthClick = useDirectionClick(Direction.north, id, onDirectionClick)\n    const onSouthClick = useDirectionClick(Direction.south, id, onDirectionClick)\n    const onWestClick = useDirectionClick(Direction.west, id, onDirectionClick)\n    const onEastClick = useDirectionClick(Direction.east, id, onDirectionClick)\n\n    return (\n        <div\n            className={classNames(styles.container, { [styles.selected]: selected })}\n            style={containerStyle}\n        >\n            <div\n                onClick={onCircleClick}\n                className={styles.circle}\n                style={circleStyle}\n            >\n                <span>{symbol}</span>\n            </div>\n            {directionNode(Direction.north, onNorthClick, northStyle, styles.north, styles, direction)}\n            {directionNode(Direction.south, onSouthClick, southStyle, styles.south, styles, direction)}\n            {directionNode(Direction.west, onWestClick, westStyle, styles.west, styles, direction)}\n            {directionNode(Direction.east, onEastClick, eastStyle, styles.east, styles, direction)}\n        </div>\n    )\n}\n\nfunction directionNode(direction, onClick, style, className, styles, currentDirection) {\n    const current = direction === currentDirection\n    return (\n        <div\n            onClick={onClick}\n            className={classNames(className, styles.direction, { [styles.current]: current })}\n            style={style}\n        />\n    )\n}\n\nfunction generateColors(color) {\n    return {\n        backgroundColor: color,\n        borderColor: chroma(color).darken(2).saturate(2).hex()\n    }\n}\n\nfunction generateContainerStyle(size) {\n    return {\n        width: size + 'px',\n        height: size + 'px'\n    }\n}\n\nfunction generateCircleStyle(colors) {\n    return {\n        backgroundColor: colors.backgroundColor,\n        borderColor: colors.borderColor\n    }\n}\n\nfunction generateNorthStyle(size, colors) {\n    const borderWidth = generateBorderWidth(size)\n    return {\n        top: 0,\n        left: generatePosition(size),\n        borderLeftWidth: borderWidth,\n        borderRightWidth: borderWidth,\n        borderBottomWidth: borderWidth,\n        borderBottomColor: colors.borderColor\n    }\n}\n\nfunction generateSouthStyle(size, colors) {\n    const borderWidth = generateBorderWidth(size)\n    return {\n        bottom: 0,\n        left: generatePosition(size),\n        borderLeftWidth: borderWidth,\n        borderRightWidth: borderWidth,\n        borderTopWidth: borderWidth,\n        borderTopColor: colors.borderColor\n    }\n}\n\nfunction generateWestStyle(size, colors) {\n    const borderWidth = generateBorderWidth(size)\n    return {\n        top: generatePosition(size),\n        left: 0,\n        borderTopWidth: borderWidth,\n        borderBottomWidth: borderWidth,\n        borderRightWidth: borderWidth,\n        borderRightColor: colors.borderColor\n    }\n}\n\nfunction generateEastStyle(size, colors) {\n    const borderWidth = generateBorderWidth(size)\n    return {\n        top: generatePosition(size),\n        right: 0,\n        borderTopWidth: borderWidth,\n        borderBottomWidth: borderWidth,\n        borderLeftWidth: borderWidth,\n        borderLeftColor: colors.borderColor\n    }\n}\n\nfunction generateBorderWidth(size) {\n    return ((size / 10) * 3) + 'px'\n}\n\nfunction generatePosition(size) {\n    return (size / 5) + 'px'\n}\n\nfunction useDirectionClick(direction, id, onDirectionClick) {\n    return useCallback((event) => {\n        if (onDirectionClick) {\n            event.stopPropagation()\n            onDirectionClick(id, direction)\n        }\n    }, [direction, id, onDirectionClick])\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst NAME = 'field'\n\nexport const state = createSlice({\n    name: NAME,\n    initialState: {\n        columns: 0,\n        rows: 0,\n        zoom: 1,\n        cells: [],\n        nextTokenId: 0,\n        tokens: {},\n        selectedTokenId: null\n    },\n    reducers: {\n\n        // Payload: columns, rows\n        setDimensions(state, action) {\n            const { columns, rows } = action.payload\n\n            state.columns = columns\n            state.rows = rows\n\n            for (let x = 0; x < columns; x++) {\n                state.cells[x] = []\n\n                for (let y = 0; y < rows; y++) {\n                    state.cells[x][y] = null\n                }\n            }\n        },\n\n        // Payload: color, symbol, direction, x, y\n        createToken(state, action) {\n            const token = {\n                id: state.nextTokenId++,\n                ...action.payload\n            }\n\n            state.tokens[token.id] = token\n            state.cells[token.x][token.y] = token.id\n        },\n\n        // Payload: id, x, y\n        moveToken(state, action) {\n            const { id, x, y } = action.payload\n\n            const token = state.tokens[id]\n\n            state.cells[token.x][token.y] = null\n            state.cells[x][y] = token.id\n\n            token.x = x\n            token.y = y\n        },\n\n        // Payload: id\n        selectToken(state, action) {\n            const { id } = action.payload\n            state.selectedTokenId = id\n        },\n\n        unselectToken(state) {\n            state.selectedTokenId = null\n        },\n\n        // Payload: id, direction\n        toggleDirection(state, action) {\n            const { id, direction } = action.payload\n\n            const token = state.tokens[id]\n\n            if (token.direction !== direction) {\n                token.direction = direction\n            } else {\n                token.direction = null\n            }\n        }\n\n    }\n})\n\nexport const getColumns = (state) => state[NAME].columns\nexport const getRows = (state) => state[NAME].rows\nexport const getZoom = (state) => state[NAME].zoom\nexport const getTokens = (state) => Object.values(state[NAME].tokens)\nexport const isTokenSelected = (state, tokenId) => state[NAME].selectedTokenId === tokenId\n\nexport const {\n    setDimensions,\n    createToken,\n    moveToken,\n    selectToken,\n    unselectToken,\n    toggleDirection\n} = state.actions\n","import { useCallback } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Token } from '../token'\nimport { selectToken, isTokenSelected, toggleDirection } from './state'\n\nexport function GridToken(props) {\n    const { id } = props\n\n    const dispatch = useDispatch()\n\n    const selectedCallback = useCallback((state) => isTokenSelected(state, id), [id])\n    const selected = useSelector(selectedCallback)\n    const { x, y, ...tokenProps } = props\n\n    const onTokenClick = useCallback((id) => {\n        if (!selected) {\n            dispatch(selectToken({ id }))\n        }\n    }, [dispatch, selected])\n\n    const onDirectionClick = useCallback((id, direction) => {\n        if (selected) {\n            dispatch(toggleDirection({ id, direction }))\n        } else {\n            dispatch(selectToken({ id }))\n        }\n    }, [dispatch, selected])\n\n    const containerStyle = generateContainerStyle(props)\n\n    return (\n        <div style={containerStyle}>\n            <Token\n                onTokenClick={onTokenClick}\n                onDirectionClick={onDirectionClick}\n                selected={selected}\n                {...tokenProps}\n            />\n        </div>\n    )\n}\n\nfunction generateContainerStyle({ x, y, size }) {\n    const left = (x * size) + 'px'\n    const top = (y * size) + 'px'\n\n    const width = size + 'px'\n    const height = size + 'px'\n\n    return {\n        position: 'absolute',\n        left,\n        top,\n        width,\n        height\n    }\n}\n","import { useSelector, useDispatch } from 'react-redux'\nimport { Grid } from './Grid'\nimport { GridToken } from './GridToken'\nimport { getColumns, getRows, getZoom, getTokens, unselectToken } from './state'\nimport styles from './Field.module.css'\n\nconst BASE_CELL_SIZE = 100\n\nexport function Field() {\n    const columns = useSelector(getColumns)\n    const rows = useSelector(getRows)\n    const zoom = useSelector(getZoom)\n    const tokens = useSelector(getTokens)\n\n    const cellSize = generateCellSize(zoom)\n    const gridTokens = generateGridTokens(tokens, cellSize)\n\n    const dispatch = useDispatch()\n    const onUnselectToken = () => dispatch(unselectToken())\n\n    return (\n        <div className={styles.field}>\n            <div\n                className={styles.gridWrapper}\n                onClick={onUnselectToken}\n            >\n                <Grid\n                    columns={columns}\n                    rows={rows}\n                    cellSize={cellSize}\n                >\n                    {gridTokens}\n                </Grid>\n            </div>\n        </div>\n    )\n}\n\nfunction generateCellSize(zoom) {\n    return BASE_CELL_SIZE * zoom\n}\n\nfunction generateGridTokens(tokens, cellSize) {\n    return tokens.map(token =>\n        <GridToken\n            key={token.id}\n            id={token.id}\n            size={cellSize}\n            color={token.color}\n            symbol={token.symbol}\n            direction={token.direction}\n            x={token.x}\n            y={token.y}\n        />\n    )\n}\n","import { Field } from './field'\n\nfunction App() {\n    return (\n        <Field />\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { state as field } from './field'\n\nexport const store = configureStore({\n    reducer: {\n        [field.name]: field.reducer\n    }\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\n\nimport { store } from './store'\nimport { Direction } from './token'\nimport { setDimensions, createToken, moveToken } from './field'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n\nstore.dispatch(setDimensions({\n    columns: 5,\n    rows: 5\n}))\n\nstore.dispatch(createToken({\n    color: '#D5E8D4',\n    symbol: 'T',\n    direction: Direction.west,\n    x: 4,\n    y: 4\n}))\n\nstore.dispatch(createToken({\n    color: '#D5E8D4',\n    symbol: 'E',\n    direction: Direction.south,\n    x: 1,\n    y: 0\n}))\n\nstore.dispatch(createToken({\n    color: '#F8CECC',\n    symbol: 'M',\n    direction: Direction.south,\n    x: 1,\n    y: 1\n}))\n\nstore.dispatch(createToken({\n    color: '#F8CECC',\n    symbol: 'M',\n    direction: Direction.south,\n    x: 2,\n    y: 2\n}))\n\nstore.dispatch(createToken({\n    color: '#D5E8D4',\n    symbol: 'Y',\n    direction: Direction.west,\n    x: 3,\n    y: 2\n}))\n\nstore.dispatch(createToken({\n    color: '#D5E8D4',\n    symbol: 'K',\n    direction: Direction.north,\n    x: 1,\n    y: 3\n}))\n\nstore.dispatch(createToken({\n    color: '#647687',\n    symbol: '',\n    direction: null,\n    x: 4,\n    y: 0\n}))\n\nstore.dispatch(createToken({\n    color: '#647687',\n    symbol: '',\n    direction: null,\n    x: 3,\n    y: 1\n}))\n\nstore.dispatch(createToken({\n    color: '#647687',\n    symbol: '',\n    direction: null,\n    x: 0,\n    y: 2\n}))\n\nstore.dispatch(createToken({\n    color: '#647687',\n    symbol: '',\n    direction: null,\n    x: 1,\n    y: 4\n}))\n\nstore.dispatch(moveToken({\n    id: '0',\n    x: 3,\n    y: 4\n}))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__5dSy0\",\"cell\":\"Grid_cell__2lFos\",\"firstRow\":\"Grid_firstRow__3GmUT\",\"lastColumn\":\"Grid_lastColumn__1e561\"};"],"sourceRoot":""}