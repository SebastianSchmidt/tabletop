{"version":3,"sources":["field/GridItem.module.css","field/Field.module.css","field/Grid.module.css","token/Token.module.css","token/Token.jsx","field/state.js","field/GridItem.jsx","field/Grid.jsx","field/GridToken.jsx","field/Field.jsx","App.js","serviceWorker.js","store.js","index.js"],"names":["module","exports","Direction","Object","freeze","north","south","west","east","TokenType","Token","id","size","color","symbol","direction","onTokenClick","onDirectionClick","selected","draggable","useDrag","type","item","canDrag","collect","monitor","isDragging","useDraggable","drag","onCircleClick","useCallback","event","stopPropagation","useCircleClick","onNorthClick","useDirectionClick","onSouthClick","onWestClick","onEastClick","colors","backgroundColor","borderColor","chroma","darken","saturate","hex","generateColors","containerStyle","width","height","generateContainerStyle","circleStyle","generateCircleStyle","northStyle","borderWidth","generateBorderWidth","top","left","generatePosition","borderLeftWidth","borderRightWidth","borderBottomWidth","borderBottomColor","generateNorthStyle","southStyle","bottom","borderTopWidth","borderTopColor","generateSouthStyle","westStyle","borderRightColor","generateWestStyle","eastStyle","right","borderLeftColor","generateEastStyle","containerClassName","classNames","styles","container","dragging","circleClassName","circle","ref","className","style","onClick","directionNode","currentDirection","current","NAME","state","createSlice","name","initialState","columns","rows","zoom","cells","nextTokenId","tokenIds","tokens","selectedTokenId","reducers","setDimensions","action","payload","x","y","createToken","token","push","moveToken","selectToken","unselectToken","toggleDirection","getColumns","getRows","getZoom","getTokenIds","actions","GridItem","dispatch","useDispatch","empty","useSelector","isCellEmpty","useDrop","accept","canDrop","drop","handleMovenToken","isOver","useDroppable","cell","firstRow","lastColumn","droppable","cellSize","lineHeight","generateStyle","Grid","children","generateGridStyle","generateCells","grid","GridToken","props","getTokenById","tokenId","isTokenSelected","position","Field","generateCellSize","gridTokens","map","generateGridTokens","field","gridWrapper","App","Boolean","window","location","hostname","match","store","configureStore","reducer","ReactDOM","render","StrictMode","DndProvider","backend","HTML5Backend","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9368039e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"GridItem_cell__hsSTq\",\"firstRow\":\"GridItem_firstRow__8BhAg\",\"lastColumn\":\"GridItem_lastColumn__320FC\",\"droppable\":\"GridItem_droppable__yTq2v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"Field_field__1PltA\",\"gridWrapper\":\"Field_gridWrapper__oluTN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__5dSy0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Token_container__C3-vl\",\"circle\":\"Token_circle__36Ifi\",\"direction\":\"Token_direction__2emyN\",\"selected\":\"Token_selected__1GyAX\",\"current\":\"Token_current__P_JN5\",\"north\":\"Token_north__2V4ME\",\"south\":\"Token_south__2HjCE\",\"west\":\"Token_west__2iXXe\",\"east\":\"Token_east__Eu9f2\",\"draggable\":\"Token_draggable__1ocar\",\"dragging\":\"Token_dragging__1Uzd2\"};","import { useCallback } from 'react'\nimport { useDrag } from 'react-dnd'\nimport styles from './Token.module.css'\nimport chroma from 'chroma-js'\nimport classNames from 'classnames'\n\nexport const Direction = Object.freeze({\n    north: 'north',\n    south: 'south',\n    west: 'west',\n    east: 'east'\n})\n\nexport const TokenType = 'Token'\n\nexport function Token({\n    id,\n    size,\n    color,\n    symbol,\n    direction,\n    onTokenClick,\n    onDirectionClick,\n    selected,\n    draggable\n}) {\n    // Logic\n\n    const [{ isDragging }, drag] = useDraggable(id, draggable)\n\n    const onCircleClick = useCircleClick(id, onTokenClick)\n    const onNorthClick = useDirectionClick(Direction.north, id, onDirectionClick)\n    const onSouthClick = useDirectionClick(Direction.south, id, onDirectionClick)\n    const onWestClick = useDirectionClick(Direction.west, id, onDirectionClick)\n    const onEastClick = useDirectionClick(Direction.east, id, onDirectionClick)\n\n    // Styling\n\n    const colors = generateColors(color)\n\n    const containerStyle = generateContainerStyle(size)\n    const circleStyle = generateCircleStyle(colors)\n    const northStyle = generateNorthStyle(size, colors)\n    const southStyle = generateSouthStyle(size, colors)\n    const westStyle = generateWestStyle(size, colors)\n    const eastStyle = generateEastStyle(size, colors)\n\n    const containerClassName = classNames(\n        styles.container,\n        {\n            [styles.selected]: selected,\n            [styles.dragging]: isDragging\n        }\n    )\n\n    const circleClassName = classNames(\n        styles.circle,\n        {\n            [styles.draggable]: draggable\n        }\n    )\n\n    // JSX\n\n    return (\n        <div\n            ref={drag}\n            className={containerClassName}\n            style={containerStyle}\n        >\n            <div\n                onClick={onCircleClick}\n                className={circleClassName}\n                style={circleStyle}\n            >\n                <span>{symbol}</span>\n            </div>\n            {directionNode(Direction.north, onNorthClick, northStyle, styles.north, styles, direction)}\n            {directionNode(Direction.south, onSouthClick, southStyle, styles.south, styles, direction)}\n            {directionNode(Direction.west, onWestClick, westStyle, styles.west, styles, direction)}\n            {directionNode(Direction.east, onEastClick, eastStyle, styles.east, styles, direction)}\n        </div>\n    )\n}\n\n// Logic\n\nfunction useDraggable(id, draggable) {\n    return useDrag(() => ({\n        type: TokenType,\n        item: { id },\n        canDrag: () => draggable,\n        collect: (monitor) => ({\n            isDragging: !!monitor.isDragging()\n        })\n    }), [id, draggable])\n}\n\nfunction useCircleClick(id, onTokenClick) {\n    return useCallback((event) => {\n        if (onTokenClick) {\n            event.stopPropagation()\n            onTokenClick(id)\n        }\n    }, [id, onTokenClick])\n}\n\nfunction useDirectionClick(direction, id, onDirectionClick) {\n    return useCallback((event) => {\n        if (onDirectionClick) {\n            event.stopPropagation()\n            onDirectionClick(id, direction)\n        }\n    }, [direction, id, onDirectionClick])\n}\n\n// Styling\n\nfunction generateColors(color) {\n    return {\n        backgroundColor: color,\n        borderColor: chroma(color).darken(2).saturate(2).hex()\n    }\n}\n\nfunction generateContainerStyle(size) {\n    return {\n        width: size + 'px',\n        height: size + 'px'\n    }\n}\n\nfunction generateCircleStyle(colors) {\n    return {\n        backgroundColor: colors.backgroundColor,\n        borderColor: colors.borderColor\n    }\n}\n\nfunction generateNorthStyle(size, colors) {\n    const borderWidth = generateBorderWidth(size)\n    return {\n        top: 0,\n        left: generatePosition(size),\n        borderLeftWidth: borderWidth,\n        borderRightWidth: borderWidth,\n        borderBottomWidth: borderWidth,\n        borderBottomColor: colors.borderColor\n    }\n}\n\nfunction generateSouthStyle(size, colors) {\n    const borderWidth = generateBorderWidth(size)\n    return {\n        bottom: 0,\n        left: generatePosition(size),\n        borderLeftWidth: borderWidth,\n        borderRightWidth: borderWidth,\n        borderTopWidth: borderWidth,\n        borderTopColor: colors.borderColor\n    }\n}\n\nfunction generateWestStyle(size, colors) {\n    const borderWidth = generateBorderWidth(size)\n    return {\n        top: generatePosition(size),\n        left: 0,\n        borderTopWidth: borderWidth,\n        borderBottomWidth: borderWidth,\n        borderRightWidth: borderWidth,\n        borderRightColor: colors.borderColor\n    }\n}\n\nfunction generateEastStyle(size, colors) {\n    const borderWidth = generateBorderWidth(size)\n    return {\n        top: generatePosition(size),\n        right: 0,\n        borderTopWidth: borderWidth,\n        borderBottomWidth: borderWidth,\n        borderLeftWidth: borderWidth,\n        borderLeftColor: colors.borderColor\n    }\n}\n\nfunction generateBorderWidth(size) {\n    return ((size / 10) * 3) + 'px'\n}\n\nfunction generatePosition(size) {\n    return (size / 5) + 'px'\n}\n\n// JSX\n\nfunction directionNode(direction, onClick, style, className, styles, currentDirection) {\n    const current = direction === currentDirection\n    return (\n        <div\n            onClick={onClick}\n            className={classNames(className, styles.direction, { [styles.current]: current })}\n            style={style}\n        />\n    )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst NAME = 'field'\n\nexport const state = createSlice({\n    name: NAME,\n    initialState: {\n        columns: 0,\n        rows: 0,\n        zoom: 1,\n        cells: [],\n        nextTokenId: 0,\n        tokenIds: [],\n        tokens: {},\n        selectedTokenId: null\n    },\n    reducers: {\n\n        // Payload: columns, rows\n        setDimensions(state, action) {\n            const { columns, rows } = action.payload\n\n            state.columns = columns\n            state.rows = rows\n\n            for (let x = 0; x < columns; x++) {\n                state.cells[x] = []\n\n                for (let y = 0; y < rows; y++) {\n                    state.cells[x][y] = null\n                }\n            }\n        },\n\n        // Payload: color, symbol, direction, x, y\n        createToken(state, action) {\n            const token = {\n                id: state.nextTokenId++,\n                ...action.payload\n            }\n\n            state.tokenIds.push(token.id)\n            state.tokens[token.id] = token\n            state.cells[token.x][token.y] = token.id\n        },\n\n        // Payload: id, x, y\n        moveToken(state, action) {\n            const { id, x, y } = action.payload\n\n            const token = state.tokens[id]\n\n            state.cells[token.x][token.y] = null\n            state.cells[x][y] = token.id\n\n            token.x = x\n            token.y = y\n        },\n\n        // Payload: id\n        selectToken(state, action) {\n            const { id } = action.payload\n            state.selectedTokenId = id\n        },\n\n        unselectToken(state) {\n            state.selectedTokenId = null\n        },\n\n        // Payload: id, direction\n        toggleDirection(state, action) {\n            const { id, direction } = action.payload\n\n            const token = state.tokens[id]\n\n            if (token.direction !== direction) {\n                token.direction = direction\n            } else {\n                token.direction = null\n            }\n        }\n\n    }\n})\n\nexport const getColumns = (state) => state[NAME].columns\nexport const getRows = (state) => state[NAME].rows\nexport const getZoom = (state) => state[NAME].zoom\nexport const getTokenIds = (state) => state[NAME].tokenIds\nexport const getTokenById = (state, id) => state[NAME].tokens[id]\nexport const isTokenSelected = (state, tokenId) => state[NAME].selectedTokenId === tokenId\nexport const isCellEmpty = (state, x, y) => state[NAME].cells[x][y] === null\n\nexport const {\n    setDimensions,\n    createToken,\n    moveToken,\n    selectToken,\n    unselectToken,\n    toggleDirection\n} = state.actions\n","import { useDrop } from 'react-dnd'\nimport classNames from 'classnames'\nimport styles from './GridItem.module.css'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { TokenType } from '../token/Token'\nimport { isCellEmpty, moveToken } from './state'\n\nexport function GridItem({\n    x,\n    y,\n    columns,\n    size\n}) {\n    const [{ isOver, canDrop }, drop] = useDroppable(x, y)\n\n    const className = classNames(\n        styles.cell,\n        {\n            [styles.firstRow]: y === 0,\n            [styles.lastColumn]: x === columns - 1,\n            [styles.droppable]: isOver && canDrop\n        }\n    )\n\n    const style = generateStyle(size)\n\n    return (\n        <div\n            ref={drop}\n            className={className}\n            style={style}\n        />\n    )\n}\n\nfunction useDroppable(x, y) {\n    const dispatch = useDispatch()\n\n    const empty = useSelector((state) => isCellEmpty(state, x, y))\n\n    return useDrop(() => ({\n        accept: TokenType,\n        canDrop: () => empty,\n        drop: (item) => handleMovenToken(item, x, y, dispatch),\n        collect: (monitor) => ({\n            isOver: !!monitor.isOver(),\n            canDrop: !!monitor.canDrop()\n        })\n    }), [x, y, empty, dispatch])\n}\n\nfunction handleMovenToken(item, x, y, dispatch) {\n    const { id } = item\n\n    dispatch(moveToken({\n        id,\n        x,\n        y\n    }))\n}\n\nfunction generateStyle(cellSize) {\n    const size = cellSize + 'px'\n    return {\n        width: size,\n        height: size,\n        lineHeight: size\n    }\n}\n","import styles from './Grid.module.css'\nimport { GridItem } from './GridItem'\n\nexport function Grid({ columns, rows, cellSize, children }) {\n    const style = generateGridStyle(columns, rows, cellSize)\n    const cells = generateCells(columns, rows, cellSize)\n\n    return (\n        <div className={styles.grid} style={style}>\n            {cells}\n            {children}\n        </div>\n    )\n}\n\nfunction generateGridStyle(columns, rows, cellSize) {\n    return {\n        width: (columns * cellSize) + 'px',\n        height: (rows * cellSize) + 'px'\n    }\n}\n\nfunction generateCells(columns, rows, cellSize) {\n    const cells = []\n\n    for (let y = 0; y < rows; y++) {\n\n        for (let x = 0; x < columns; x++) {\n\n            cells.push(\n                <GridItem\n                    key={x + ';' + y}\n                    x={x}\n                    y={y}\n                    columns={columns}\n                    size={cellSize}\n                />\n            )\n\n        }\n\n    }\n\n    return cells\n}\n","import { useCallback } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Token } from '../token'\nimport { getTokenById, selectToken, unselectToken, isTokenSelected, toggleDirection } from './state'\n\nexport function GridToken(props) {\n    const { id, size } = props\n\n    const { color, symbol, direction, x, y } = useSelector((state) => getTokenById(state, id))\n    const selected = useSelector((state) => isTokenSelected(state, id))\n\n    const dispatch = useDispatch()\n\n    const onTokenClick = useCallback((id) => {\n        if (!selected) {\n            dispatch(selectToken({ id }))\n        } else {\n            dispatch(unselectToken())\n        }\n    }, [dispatch, selected])\n\n    const onDirectionClick = useCallback((id, direction) => {\n        if (selected) {\n            dispatch(toggleDirection({ id, direction }))\n        } else {\n            dispatch(selectToken({ id }))\n        }\n    }, [dispatch, selected])\n\n    const containerStyle = generateContainerStyle(x, y, size)\n\n    return (\n        <div style={containerStyle}>\n            <Token\n                id={id}\n                size={size}\n                color={color}\n                symbol={symbol}\n                direction={direction}\n                onTokenClick={onTokenClick}\n                onDirectionClick={onDirectionClick}\n                selected={selected}\n                draggable={true}\n            />\n        </div>\n    )\n}\n\nfunction generateContainerStyle(x, y, size) {\n    const left = (x * size) + 'px'\n    const top = (y * size) + 'px'\n\n    const width = size + 'px'\n    const height = size + 'px'\n\n    return {\n        position: 'absolute',\n        left,\n        top,\n        width,\n        height\n    }\n}\n","import { useSelector, useDispatch } from 'react-redux'\nimport { Grid } from './Grid'\nimport { GridToken } from './GridToken'\nimport { getColumns, getRows, getZoom, getTokenIds, unselectToken } from './state'\nimport styles from './Field.module.css'\n\nconst BASE_CELL_SIZE = 100\n\nexport function Field() {\n    const columns = useSelector(getColumns)\n    const rows = useSelector(getRows)\n    const zoom = useSelector(getZoom)\n    const tokenIds = useSelector(getTokenIds)\n\n    const cellSize = generateCellSize(zoom)\n    const gridTokens = generateGridTokens(tokenIds, cellSize)\n\n    const dispatch = useDispatch()\n    const onUnselectToken = () => dispatch(unselectToken())\n\n    return (\n        <div className={styles.field}>\n            <div\n                className={styles.gridWrapper}\n                onClick={onUnselectToken}\n            >\n                <Grid\n                    columns={columns}\n                    rows={rows}\n                    cellSize={cellSize}\n                >\n                    {gridTokens}\n                </Grid>\n            </div>\n        </div>\n    )\n}\n\nfunction generateCellSize(zoom) {\n    return BASE_CELL_SIZE * zoom\n}\n\nfunction generateGridTokens(tokenIds, cellSize) {\n    return tokenIds.map(tokenId =>\n        <GridToken\n            key={tokenId}\n            id={tokenId}\n            size={cellSize}\n        />\n    )\n}\n","import { Field } from './field'\n\nfunction App() {\n    return (\n        <Field />\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { state as field } from './field'\n\nexport const store = configureStore({\n    reducer: {\n        [field.name]: field.reducer\n    }\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nimport { store } from './store'\nimport { Direction } from './token'\nimport { setDimensions, createToken, moveToken } from './field'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <DndProvider backend={HTML5Backend}>\n                <App />\n            </DndProvider>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n\nstore.dispatch(setDimensions({\n    columns: 5,\n    rows: 5\n}))\n\nstore.dispatch(createToken({\n    color: '#D5E8D4',\n    symbol: 'T',\n    direction: Direction.west,\n    x: 4,\n    y: 4\n}))\n\nstore.dispatch(createToken({\n    color: '#D5E8D4',\n    symbol: 'E',\n    direction: Direction.south,\n    x: 1,\n    y: 0\n}))\n\nstore.dispatch(createToken({\n    color: '#F8CECC',\n    symbol: 'M',\n    direction: Direction.south,\n    x: 1,\n    y: 1\n}))\n\nstore.dispatch(createToken({\n    color: '#F8CECC',\n    symbol: 'M',\n    direction: Direction.south,\n    x: 2,\n    y: 2\n}))\n\nstore.dispatch(createToken({\n    color: '#D5E8D4',\n    symbol: 'Y',\n    direction: Direction.west,\n    x: 3,\n    y: 2\n}))\n\nstore.dispatch(createToken({\n    color: '#D5E8D4',\n    symbol: 'K',\n    direction: Direction.north,\n    x: 1,\n    y: 3\n}))\n\nstore.dispatch(createToken({\n    color: '#647687',\n    symbol: '',\n    direction: null,\n    x: 4,\n    y: 0\n}))\n\nstore.dispatch(createToken({\n    color: '#647687',\n    symbol: '',\n    direction: null,\n    x: 3,\n    y: 1\n}))\n\nstore.dispatch(createToken({\n    color: '#647687',\n    symbol: '',\n    direction: null,\n    x: 0,\n    y: 2\n}))\n\nstore.dispatch(createToken({\n    color: '#647687',\n    symbol: '',\n    direction: null,\n    x: 1,\n    y: 4\n}))\n\nstore.dispatch(moveToken({\n    id: '0',\n    x: 3,\n    y: 4\n}))\n"],"sourceRoot":""}