{"version":3,"sources":["field/GridItem.module.css","app/App.module.css","field/Field.module.css","panel/PanelCategory.module.css","field/Grid.module.css","panel/PanelContainer.module.css","panel/Panel.module.css","token/Token.jsx","field/state.js","field/GridItem.jsx","field/Grid.jsx","field/GridToken.jsx","field/Field.jsx","shared/use-input.js","panel/Panel.jsx","panel/PanelCategory.jsx","panel/FieldPanel.jsx","panel/TokenPanel.jsx","panel/PanelContainer.jsx","panel/state.js","app/App.js","serviceWorker.js","store.js","index.js","token/Token.module.css"],"names":["module","exports","Direction","Object","freeze","north","south","west","east","TokenType","BLACK_TEXT","WHITE_TEXT","Token","id","size","color","symbol","direction","onTokenClick","onDirectionClick","selected","draggable","useDrag","type","item","canDrag","collect","monitor","isDragging","useDraggable","drag","onCircleClick","useCallback","event","stopPropagation","useCircleClick","onNorthClick","useDirectionClick","onSouthClick","onWestClick","onEastClick","colors","blackText","chroma","contrast","backgroundColor","borderColor","darken","saturate","hex","textColor","generateColors","containerStyle","width","height","generateContainerStyle","circleStyle","generateCircleStyle","northStyle","borderWidth","generateBorderWidth","top","left","generatePosition","borderLeftWidth","borderRightWidth","borderBottomWidth","borderBottomColor","generateNorthStyle","southStyle","bottom","borderTopWidth","borderTopColor","generateSouthStyle","westStyle","borderRightColor","generateWestStyle","eastStyle","right","borderLeftColor","generateEastStyle","containerClassName","classNames","styles","container","dragging","circleClassName","circle","ref","className","style","onClick","directionNode","currentDirection","current","NAME","normalizeDimension","value","Math","max","min","state","createSlice","name","initialState","columns","rows","zoom","cells","nextTokenId","tokenIds","tokens","selectedTokenId","reducers","setDimensions","action","payload","columnsDiff","increase","columnsStart","columnsEnd","x","y","growColumns","decrease","tokenId","filter","splice","shrinkColumns","abs","rowsDiff","rowsStart","rowsEnd","growRows","shrinkRows","createToken","token","push","moveToken","selectToken","unselectToken","toggleDirection","setTokenSymbol","getColumns","getRows","getZoom","getTokenIds","getSelectedTokenId","actions","GridItem","dispatch","useDispatch","empty","useSelector","isCellEmpty","useDrop","accept","canDrop","drop","handleMovenToken","isOver","useDroppable","cell","firstRow","lastColumn","droppable","cellSize","lineHeight","generateStyle","Grid","children","generateGridStyle","generateCells","grid","GridToken","props","getTokenById","isTokenSelected","position","Field","generateCellSize","gridTokens","map","generateGridTokens","field","gridWrapper","useInput","initialValue","listener","useState","setValue","useEffect","bind","onChange","target","Panel","title","PanelCategory","FieldPanel","Dimensions","columnsChanged","parseInt","isNaN","rowsChanged","columnsBind","rowsBind","TokenPanel","PanelContainer","App","tokenPanel","Boolean","window","location","hostname","match","store","configureStore","reducer","panel","ReactDOM","render","StrictMode","DndProvider","backend","HTML5Backend","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d98e2bc3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"GridItem_cell__hsSTq\",\"firstRow\":\"GridItem_firstRow__8BhAg\",\"lastColumn\":\"GridItem_lastColumn__320FC\",\"droppable\":\"GridItem_droppable__yTq2v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__7_OSo\",\"field\":\"App_field__1Za-d\",\"tokenPanel\":\"App_tokenPanel__1Y1io\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"Field_field__1PltA\",\"gridWrapper\":\"Field_gridWrapper__oluTN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PanelCategory_container__2ywKt\",\"title\":\"PanelCategory_title__2RLOE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__5dSy0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PanelContainer_container__12MNC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Panel_title__2jCxg\"};","import { useCallback } from 'react'\nimport { useDrag } from 'react-dnd'\nimport styles from './Token.module.css'\nimport chroma from 'chroma-js'\nimport classNames from 'classnames'\n\nexport const Direction = Object.freeze({\n    north: 'north',\n    south: 'south',\n    west: 'west',\n    east: 'east'\n})\n\nexport const TokenType = 'Token'\n\nconst BLACK_TEXT = '#000000'\nconst WHITE_TEXT = '#FFFFFF'\n\nexport function Token({\n    id,\n    size,\n    color,\n    symbol,\n    direction,\n    onTokenClick,\n    onDirectionClick,\n    selected,\n    draggable\n}) {\n    // Logic\n\n    const [{ isDragging }, drag] = useDraggable(id, draggable)\n\n    const onCircleClick = useCircleClick(id, onTokenClick)\n    const onNorthClick = useDirectionClick(Direction.north, id, onDirectionClick)\n    const onSouthClick = useDirectionClick(Direction.south, id, onDirectionClick)\n    const onWestClick = useDirectionClick(Direction.west, id, onDirectionClick)\n    const onEastClick = useDirectionClick(Direction.east, id, onDirectionClick)\n\n    // Styling\n\n    const colors = generateColors(color)\n\n    const containerStyle = generateContainerStyle(size)\n    const circleStyle = generateCircleStyle(colors)\n    const northStyle = generateNorthStyle(size, colors)\n    const southStyle = generateSouthStyle(size, colors)\n    const westStyle = generateWestStyle(size, colors)\n    const eastStyle = generateEastStyle(size, colors)\n\n    const containerClassName = classNames(\n        styles.container,\n        {\n            [styles.selected]: selected,\n            [styles.dragging]: isDragging\n        }\n    )\n\n    const circleClassName = classNames(\n        styles.circle,\n        {\n            [styles.draggable]: draggable\n        }\n    )\n\n    // JSX\n\n    return (\n        <div\n            ref={drag}\n            className={containerClassName}\n            style={containerStyle}\n        >\n            <div\n                onClick={onCircleClick}\n                className={circleClassName}\n                style={circleStyle}\n            >\n                <span>{symbol}</span>\n            </div>\n            {directionNode(Direction.north, onNorthClick, northStyle, styles.north, styles, direction)}\n            {directionNode(Direction.south, onSouthClick, southStyle, styles.south, styles, direction)}\n            {directionNode(Direction.west, onWestClick, westStyle, styles.west, styles, direction)}\n            {directionNode(Direction.east, onEastClick, eastStyle, styles.east, styles, direction)}\n        </div>\n    )\n}\n\n// Logic\n\nfunction useDraggable(id, draggable) {\n    return useDrag(() => ({\n        type: TokenType,\n        item: { id },\n        canDrag: () => draggable,\n        collect: (monitor) => ({\n            isDragging: !!monitor.isDragging()\n        })\n    }), [id, draggable])\n}\n\nfunction useCircleClick(id, onTokenClick) {\n    return useCallback((event) => {\n        if (onTokenClick) {\n            event.stopPropagation()\n            onTokenClick(id)\n        }\n    }, [id, onTokenClick])\n}\n\nfunction useDirectionClick(direction, id, onDirectionClick) {\n    return useCallback((event) => {\n        if (onDirectionClick) {\n            event.stopPropagation()\n            onDirectionClick(id, direction)\n        }\n    }, [direction, id, onDirectionClick])\n}\n\n// Styling\n\nfunction generateColors(color) {\n    const blackText = chroma.contrast(BLACK_TEXT, color) >= chroma.contrast(WHITE_TEXT, color)\n    return {\n        backgroundColor: color,\n        borderColor: chroma(color).darken(2).saturate(2).hex(),\n        textColor: blackText ? BLACK_TEXT : WHITE_TEXT\n    }\n}\n\nfunction generateContainerStyle(size) {\n    return {\n        width: size + 'px',\n        height: size + 'px'\n    }\n}\n\nfunction generateCircleStyle(colors) {\n    return {\n        backgroundColor: colors.backgroundColor,\n        borderColor: colors.borderColor,\n        color: colors.textColor\n    }\n}\n\nfunction generateNorthStyle(size, colors) {\n    const borderWidth = generateBorderWidth(size)\n    return {\n        top: 0,\n        left: generatePosition(size),\n        borderLeftWidth: borderWidth,\n        borderRightWidth: borderWidth,\n        borderBottomWidth: borderWidth,\n        borderBottomColor: colors.borderColor\n    }\n}\n\nfunction generateSouthStyle(size, colors) {\n    const borderWidth = generateBorderWidth(size)\n    return {\n        bottom: 0,\n        left: generatePosition(size),\n        borderLeftWidth: borderWidth,\n        borderRightWidth: borderWidth,\n        borderTopWidth: borderWidth,\n        borderTopColor: colors.borderColor\n    }\n}\n\nfunction generateWestStyle(size, colors) {\n    const borderWidth = generateBorderWidth(size)\n    return {\n        top: generatePosition(size),\n        left: 0,\n        borderTopWidth: borderWidth,\n        borderBottomWidth: borderWidth,\n        borderRightWidth: borderWidth,\n        borderRightColor: colors.borderColor\n    }\n}\n\nfunction generateEastStyle(size, colors) {\n    const borderWidth = generateBorderWidth(size)\n    return {\n        top: generatePosition(size),\n        right: 0,\n        borderTopWidth: borderWidth,\n        borderBottomWidth: borderWidth,\n        borderLeftWidth: borderWidth,\n        borderLeftColor: colors.borderColor\n    }\n}\n\nfunction generateBorderWidth(size) {\n    return ((size / 10) * 3) + 'px'\n}\n\nfunction generatePosition(size) {\n    return (size / 5) + 'px'\n}\n\n// JSX\n\nfunction directionNode(direction, onClick, style, className, styles, currentDirection) {\n    const current = direction === currentDirection\n    return (\n        <div\n            onClick={onClick}\n            className={classNames(className, styles.direction, { [styles.current]: current })}\n            style={style}\n        />\n    )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst NAME = 'field'\n\nconst MIN_DIMENSIONS = 1\nconst MAX_DIMENSIONS = 100\n\nfunction normalizeDimension(value) {\n    return Math.max(MIN_DIMENSIONS, Math.min(MAX_DIMENSIONS, value))\n}\n\nexport const state = createSlice({\n    name: NAME,\n    initialState: {\n        columns: 1,\n        rows: 1,\n        zoom: 1,\n        cells: [ [ null ] ],\n        nextTokenId: 0,\n        tokenIds: [],\n        tokens: {},\n        selectedTokenId: null\n    },\n    reducers: {\n\n        // Payload: columns, rows\n        setDimensions(state, action) {\n            const columns = normalizeDimension(action.payload.columns)\n            const rows = normalizeDimension(action.payload.rows)\n\n            // Columns\n\n            const columnsDiff = columns - state.columns\n\n            if (columnsDiff > 0) {\n                growColumns(state, columnsDiff)\n            } else if (columnsDiff < 0) {\n                shrinkColumns(state, Math.abs(columnsDiff))\n            }\n\n            state.columns = columns\n\n            // Rows\n\n            const rowsDiff = rows - state.rows\n\n            if (rowsDiff > 0) {\n                growRows(state, rowsDiff)\n            } else if (rowsDiff < 0) {\n                shrinkRows(state, Math.abs(rowsDiff))\n            }\n\n            state.rows = rows\n        },\n\n        // Payload: color, symbol, direction, x, y\n        createToken(state, action) {\n            const token = {\n                id: (state.nextTokenId++) + '',\n                ...action.payload\n            }\n\n            state.tokenIds.push(token.id)\n            state.tokens[token.id] = token\n            state.cells[token.x][token.y] = token.id\n        },\n\n        // Payload: id, x, y\n        moveToken(state, action) {\n            const { id, x, y } = action.payload\n\n            const token = state.tokens[id]\n\n            state.cells[token.x][token.y] = null\n            state.cells[x][y] = token.id\n\n            token.x = x\n            token.y = y\n        },\n\n        // Payload: id\n        selectToken(state, action) {\n            const { id } = action.payload\n            state.selectedTokenId = id\n        },\n\n        unselectToken(state) {\n            state.selectedTokenId = null\n        },\n\n        // Payload: id, direction\n        toggleDirection(state, action) {\n            const { id, direction } = action.payload\n\n            const token = state.tokens[id]\n\n            if (token.direction !== direction) {\n                token.direction = direction\n            } else {\n                token.direction = null\n            }\n        },\n\n        // Payload: id, symbol\n        setTokenSymbol(state, action) {\n            const { id, symbol } = action.payload\n            const token = state.tokens[id]\n            token.symbol = symbol\n        }\n\n    }\n})\n\nfunction growColumns(state, increase) {\n    const columnsStart = state.columns\n    const columnsEnd = state.columns + increase\n\n    for (let x = columnsStart; x < columnsEnd; x++) {\n        state.cells[x] = []\n\n        for (let y = 0; y < state.rows; y++) {\n            state.cells[x][y] = null\n        }\n    }\n}\n\nfunction growRows(state, increase) {\n    const rowsStart = state.rows\n    const rowsEnd = state.rows + increase\n\n    for (let x = 0; x < state.columns; x++) {\n        for (let y = rowsStart; y < rowsEnd; y++) {\n            state.cells[x][y] = null\n        }\n    }\n}\n\nfunction shrinkColumns(state, decrease) {\n    const columnsStart = state.columns - decrease\n    const columnsEnd = state.columns\n\n    for (let x = columnsStart; x < columnsEnd; x++) {\n        for (let y = 0; y < state.rows; y++) {\n            const tokenId = state.cells[x][y]\n\n            if (tokenId) {\n                state.tokenIds = state.tokenIds.filter(id => id !== tokenId)\n                delete state.tokens[tokenId]\n            }\n        }\n    }\n\n    state.cells.splice(columnsStart, decrease)\n}\n\nfunction shrinkRows(state, decrease) {\n    const rowsStart = state.rows - decrease\n    const rowsEnd = state.rows\n\n    for (let x = 0; x < state.columns; x++) {\n        for (let y = rowsStart; y < rowsEnd; y++) {\n            const tokenId = state.cells[x][y]\n\n            if (tokenId) {\n                state.tokenIds = state.tokenIds.filter(id => id !== tokenId)\n                delete state.tokens[tokenId]\n            }\n        }\n\n        state.cells[x].splice(rowsStart, decrease)\n    }\n}\n\nexport const getColumns = (state) => state[NAME].columns\nexport const getRows = (state) => state[NAME].rows\nexport const getZoom = (state) => state[NAME].zoom\nexport const getTokenIds = (state) => state[NAME].tokenIds\nexport const getTokenById = (state, id) => state[NAME].tokens[id]\nexport const isCellEmpty = (state, x, y) => state[NAME].cells[x][y] === null\n\nexport const isTokenSelected = (state, tokenId) => state[NAME].selectedTokenId === tokenId\nexport const getSelectedTokenId = (state) => state[NAME].selectedTokenId\nexport const getSelectedToken = (state) => {\n    const id = state[NAME].selectedTokenId\n    return id !== null ? state[NAME].tokens[id] : null\n}\n\nexport const {\n    setDimensions,\n    createToken,\n    moveToken,\n    selectToken,\n    unselectToken,\n    toggleDirection,\n    setTokenSymbol\n} = state.actions\n","import { useDrop } from 'react-dnd'\nimport classNames from 'classnames'\nimport styles from './GridItem.module.css'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { TokenType } from '../token/Token'\nimport { isCellEmpty, moveToken } from './state'\n\nexport function GridItem({\n    x,\n    y,\n    columns,\n    size\n}) {\n    const [{ isOver, canDrop }, drop] = useDroppable(x, y)\n\n    const className = classNames(\n        styles.cell,\n        {\n            [styles.firstRow]: y === 0,\n            [styles.lastColumn]: x === columns - 1,\n            [styles.droppable]: isOver && canDrop\n        }\n    )\n\n    const style = generateStyle(size)\n\n    return (\n        <div\n            ref={drop}\n            className={className}\n            style={style}\n        />\n    )\n}\n\nfunction useDroppable(x, y) {\n    const dispatch = useDispatch()\n\n    const empty = useSelector((state) => isCellEmpty(state, x, y))\n\n    return useDrop(() => ({\n        accept: TokenType,\n        canDrop: () => empty,\n        drop: (item) => handleMovenToken(item, x, y, dispatch),\n        collect: (monitor) => ({\n            isOver: !!monitor.isOver(),\n            canDrop: !!monitor.canDrop()\n        })\n    }), [x, y, empty, dispatch])\n}\n\nfunction handleMovenToken(item, x, y, dispatch) {\n    const { id } = item\n\n    dispatch(moveToken({\n        id,\n        x,\n        y\n    }))\n}\n\nfunction generateStyle(cellSize) {\n    const size = cellSize + 'px'\n    return {\n        width: size,\n        height: size,\n        lineHeight: size\n    }\n}\n","import styles from './Grid.module.css'\nimport { GridItem } from './GridItem'\n\nexport function Grid({ columns, rows, cellSize, children }) {\n    const style = generateGridStyle(columns, rows, cellSize)\n    const cells = generateCells(columns, rows, cellSize)\n\n    return (\n        <div className={styles.grid} style={style}>\n            {cells}\n            {children}\n        </div>\n    )\n}\n\nfunction generateGridStyle(columns, rows, cellSize) {\n    return {\n        width: (columns * cellSize) + 'px',\n        height: (rows * cellSize) + 'px'\n    }\n}\n\nfunction generateCells(columns, rows, cellSize) {\n    const cells = []\n\n    for (let y = 0; y < rows; y++) {\n\n        for (let x = 0; x < columns; x++) {\n\n            cells.push(\n                <GridItem\n                    key={x + ';' + y}\n                    x={x}\n                    y={y}\n                    columns={columns}\n                    size={cellSize}\n                />\n            )\n\n        }\n\n    }\n\n    return cells\n}\n","import { useCallback } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Token } from '../token'\nimport { getTokenById, selectToken, unselectToken, isTokenSelected, toggleDirection } from './state'\n\nexport function GridToken(props) {\n    const { id, size } = props\n\n    const { color, symbol, direction, x, y } = useSelector((state) => getTokenById(state, id))\n    const selected = useSelector((state) => isTokenSelected(state, id))\n\n    const dispatch = useDispatch()\n\n    const onTokenClick = useCallback((id) => {\n        if (!selected) {\n            dispatch(selectToken({ id }))\n        } else {\n            dispatch(unselectToken())\n        }\n    }, [dispatch, selected])\n\n    const onDirectionClick = useCallback((id, direction) => {\n        if (selected) {\n            dispatch(toggleDirection({ id, direction }))\n        } else {\n            dispatch(selectToken({ id }))\n        }\n    }, [dispatch, selected])\n\n    const containerStyle = generateContainerStyle(x, y, size)\n\n    return (\n        <div style={containerStyle}>\n            <Token\n                id={id}\n                size={size}\n                color={color}\n                symbol={symbol}\n                direction={direction}\n                onTokenClick={onTokenClick}\n                onDirectionClick={onDirectionClick}\n                selected={selected}\n                draggable={true}\n            />\n        </div>\n    )\n}\n\nfunction generateContainerStyle(x, y, size) {\n    const left = (x * size) + 'px'\n    const top = (y * size) + 'px'\n\n    const width = size + 'px'\n    const height = size + 'px'\n\n    return {\n        position: 'absolute',\n        left,\n        top,\n        width,\n        height\n    }\n}\n","import { useSelector, useDispatch } from 'react-redux'\nimport { Grid } from './Grid'\nimport { GridToken } from './GridToken'\nimport { getColumns, getRows, getZoom, getTokenIds, unselectToken } from './state'\nimport styles from './Field.module.css'\n\nconst BASE_CELL_SIZE = 100\n\nexport function Field() {\n    const columns = useSelector(getColumns)\n    const rows = useSelector(getRows)\n    const zoom = useSelector(getZoom)\n    const tokenIds = useSelector(getTokenIds)\n\n    const cellSize = generateCellSize(zoom)\n    const gridTokens = generateGridTokens(tokenIds, cellSize)\n\n    const dispatch = useDispatch()\n    const onUnselectToken = () => dispatch(unselectToken())\n\n    return (\n        <div className={styles.field}>\n            <div\n                className={styles.gridWrapper}\n                onClick={onUnselectToken}\n            >\n                <Grid\n                    columns={columns}\n                    rows={rows}\n                    cellSize={cellSize}\n                >\n                    {gridTokens}\n                </Grid>\n            </div>\n        </div>\n    )\n}\n\nfunction generateCellSize(zoom) {\n    return BASE_CELL_SIZE * zoom\n}\n\nfunction generateGridTokens(tokenIds, cellSize) {\n    return tokenIds.map(tokenId =>\n        <GridToken\n            key={tokenId}\n            id={tokenId}\n            size={cellSize}\n        />\n    )\n}\n","import { useState, useEffect } from 'react'\n\nexport const useInput = (initialValue, listener = null) => {\n    const [value, setValue] = useState(initialValue)\n\n    useEffect(() => setValue(initialValue), [initialValue])\n\n    const bind = {\n        value,\n        onChange: (event) => {\n            setValue(event.target.value)\n            if (listener) {\n                listener(event.target.value)\n            }\n        }\n    }\n\n    return [\n        bind,\n        value,\n        setValue\n    ]\n}\n","import styles from './Panel.module.css'\n\nexport function Panel({ title, children }) {\n    return (\n        <div>\n            <h1 className={styles.title}>{title}</h1>\n            {children}\n        </div>\n    )\n}\n","import styles from './PanelCategory.module.css'\n\nexport function PanelCategory({ title, children }) {\n    return (\n        <div className={styles.container}>\n            {title ? <h2 className={styles.title}>{title}</h2> : null}\n            {children}\n        </div>\n    )\n}\n","import { useCallback } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useInput } from '../shared/use-input'\nimport { getColumns, getRows, setDimensions } from '../field'\nimport { Panel } from './Panel'\nimport { PanelCategory } from './PanelCategory'\n\nexport function FieldPanel() {\n    return (\n        <Panel title=\"Field\">\n            <Dimensions />\n        </Panel>\n    )\n}\n\n// TODO Besseres Handling, wenn mehrstellige Zahlen eingegeben wird\n//      (Bsp. 10: schrumpft erst auf 1, wächst dann auf 10).\nfunction Dimensions() {\n    const dispatch = useDispatch()\n    const columns = useSelector(getColumns)\n    const rows = useSelector(getRows)\n\n    const columnsChanged = useCallback((value) => {\n        const columns = parseInt(value)\n        if (!isNaN(columns)) {\n            dispatch(setDimensions({\n                columns,\n                rows\n            }))\n        }\n    }, [dispatch, rows])\n\n    const rowsChanged = useCallback((value) => {\n        const rows = parseInt(value)\n        if (!isNaN(rows)) {\n            dispatch(setDimensions({\n                columns,\n                rows\n            }))\n        }\n    }, [dispatch, columns])\n\n    const [columnsBind] = useInput(columns, columnsChanged)\n    const [rowsBind] = useInput(rows, rowsChanged)\n\n    return (\n        <PanelCategory title=\"Dimensions\">\n            <div>\n                <label>Spalten</label>\n                <input\n                    type=\"number\"\n                    min=\"1\"\n                    {...columnsBind}\n                />\n            </div>\n            <div>\n                <label>Reihen</label>\n                <input\n                    type=\"number\"\n                    min=\"1\"\n                    {...rowsBind}\n                />\n            </div>\n        </PanelCategory>\n    )\n}\n","import { Panel } from './Panel'\nimport { PanelCategory } from './PanelCategory'\n\nexport function TokenPanel({ id }) {\n    return (\n        <Panel title=\"Token\">\n            <PanelCategory>\n                Debug: {id}\n            </PanelCategory>\n        </Panel>\n    )\n}\n","import { useSelector } from 'react-redux'\nimport { getSelectedTokenId } from '../field'\nimport styles from './PanelContainer.module.css'\nimport { FieldPanel } from './FieldPanel'\nimport { TokenPanel } from './TokenPanel'\n\nexport function PanelContainer() {\n    const selectedTokenId = useSelector(getSelectedTokenId)\n\n    return (\n        <div className={styles.container}>\n            {selectedTokenId\n                ? <TokenPanel id={selectedTokenId} />\n                : <FieldPanel />\n            }\n        </div>\n    )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst NAME = 'panel'\n\nexport const state = createSlice({\n    name: NAME,\n    initialState: {\n    },\n    reducers: {\n\n    }\n})\n","import { Field } from '../field'\nimport { PanelContainer } from '../panel'\nimport styles from './App.module.css'\n\nfunction App() {\n    return (\n        <div className={styles.container}>\n            <Field className={styles.field} />\n            <PanelContainer className={styles.tokenPanel} />\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { state as field } from './field'\nimport { state as panel } from './panel'\n\nexport const store = configureStore({\n    reducer: {\n        [field.name]: field.reducer,\n        [panel.name]: panel.reducer\n    }\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport App from './app/App'\nimport * as serviceWorker from './serviceWorker'\nimport './base.css'\n\nimport { store } from './store'\nimport { Direction } from './token'\nimport { setDimensions, createToken, moveToken } from './field'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <DndProvider backend={HTML5Backend}>\n                <App />\n            </DndProvider>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n\nstore.dispatch(setDimensions({\n    columns: 5,\n    rows: 5\n}))\n\nstore.dispatch(createToken({\n    color: '#D5E8D4',\n    symbol: 'T',\n    direction: Direction.west,\n    x: 4,\n    y: 4\n}))\n\nstore.dispatch(createToken({\n    color: '#D5E8D4',\n    symbol: 'E',\n    direction: Direction.south,\n    x: 1,\n    y: 0\n}))\n\nstore.dispatch(createToken({\n    color: '#F8CECC',\n    symbol: 'M',\n    direction: Direction.south,\n    x: 1,\n    y: 1\n}))\n\nstore.dispatch(createToken({\n    color: '#F8CECC',\n    symbol: 'M',\n    direction: Direction.south,\n    x: 2,\n    y: 2\n}))\n\nstore.dispatch(createToken({\n    color: '#D5E8D4',\n    symbol: 'Y',\n    direction: Direction.west,\n    x: 3,\n    y: 2\n}))\n\nstore.dispatch(createToken({\n    color: '#D5E8D4',\n    symbol: 'K',\n    direction: Direction.north,\n    x: 1,\n    y: 3\n}))\n\nstore.dispatch(createToken({\n    color: '#647687',\n    symbol: '',\n    direction: null,\n    x: 4,\n    y: 0\n}))\n\nstore.dispatch(createToken({\n    color: '#647687',\n    symbol: '',\n    direction: null,\n    x: 3,\n    y: 1\n}))\n\nstore.dispatch(createToken({\n    color: '#647687',\n    symbol: '',\n    direction: null,\n    x: 0,\n    y: 2\n}))\n\nstore.dispatch(createToken({\n    color: '#647687',\n    symbol: '',\n    direction: null,\n    x: 1,\n    y: 4\n}))\n\nstore.dispatch(moveToken({\n    id: '0',\n    x: 3,\n    y: 4\n}))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Token_container__C3-vl\",\"circle\":\"Token_circle__36Ifi\",\"direction\":\"Token_direction__2emyN\",\"selected\":\"Token_selected__1GyAX\",\"current\":\"Token_current__P_JN5\",\"north\":\"Token_north__2V4ME\",\"south\":\"Token_south__2HjCE\",\"west\":\"Token_west__2iXXe\",\"east\":\"Token_east__Eu9f2\",\"draggable\":\"Token_draggable__1ocar\",\"dragging\":\"Token_dragging__1Uzd2\"};"],"sourceRoot":""}